//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "parametry.h"
#include "unit1.h"
#include "dopravniky.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm_paremetry *Form_paremetry;
//---------------------------------------------------------------------------
__fastcall TForm_paremetry::TForm_paremetry(TComponent* Owner)
	: TForm(Owner)
{
	SG="PT - èistý technologický výrobní èas=0\nMT - èas pøesouvání produktu=0\nWT - doba èekání vozíku=0\nIT - doba kontroly vozíku=0\nQT - doba èekání ve frontì=0\n...=""";
	K="délka dopravníku [m]=0";
	P="WT - doba èekání vozíku=0";

	novy_parametr_n=0;
	offset=0;

	minsec=MIN;

}
//---------------------------------------------------------------------------
void __fastcall TForm_paremetry::FormShow(TObject *Sender)
{
	//Form_paremetry->Edit1->SetFocus();
	//Form_paremetry->Edit1->SelectAll();

	//pøedvybrání, potom dodìlat v momentu, kdy už jednou volil
	vykresli_vozik(RadioButton_na_delku->Checked);//nutno zde
	if(Form_paremetry->Caption=="vytìkání - parametry" || Form_paremetry->Caption=="sušení - parametry" || Form_paremetry->Caption=="chlazení - parametry")
	{ComboBox_druh_objektu->ItemIndex=2;ComboBox_druh_objektuChange(Sender);}


  ComboBox_dopravnik->Items->Clear();
	unsigned int n=Form_dopravnik->ValueListEditor->Strings->Count;
	UnicodeString S=Form_dopravnik->ValueListEditor->Strings->Text;
	for(unsigned int i=0;i<n;i++)
	{
		ComboBox_dopravnik->Items->Add(Form1->ms.TrimRightFrom(S,"=")+" - "+Form1->ms.EP(S,"=","\n").TrimRight()+" [metrù/min]");
		S=Form1->ms.delete_repeat(S,"\n",1);
	}
	ComboBox_dopravnik->ItemIndex=0;

	//vykresli_vozik(RadioButton_na_delku->Checked); - používám prozatim výše

	/*if(ComboBox_dopravnik->ItemIndex==1)get_capacity(1);
	if(ComboBox_dopravnik->ItemIndex==2)get_capacity(2);*/
	ValueListEditorStringsChange(Sender);
}
//---------------------------------------------------------------------------
void TForm_paremetry::vykresli_vozik(bool na_delku)
{
	Image_vozik->Canvas->Pen->Color=clBtnFace;
	Image_vozik->Canvas->Pen->Width=1;
	Image_vozik->Canvas->Brush->Color=clBtnFace;
	Image_vozik->Canvas->Rectangle(0,0,Image_vozik->Width,Image_vozik->Height);//vybarvení celého
	TPoint stred; stred.x=Image_vozik->Width/2;stred.y=Image_vozik->Height/2;
	double D,S;
	unsigned short meritko=(Image_vozik->Width-6)/Form1->PP.delka_voziku;
	if(meritko>(Image_vozik->Width-6)/Form1->PP.sirka_voziku)meritko=(Image_vozik->Width-6)/Form1->PP.sirka_voziku;
	if(meritko>(Image_vozik->Height-6)/Form1->PP.delka_voziku)meritko=(Image_vozik->Height-6)/Form1->PP.delka_voziku;
	if(meritko>(Image_vozik->Height-6)/Form1->PP.sirka_voziku)meritko=(Image_vozik->Height-6)/Form1->PP.sirka_voziku;

	if(na_delku){D=Form1->PP.delka_voziku;S=Form1->PP.sirka_voziku;}
	else{S=Form1->PP.delka_voziku;D=Form1->PP.sirka_voziku;}

	//packy
	Image_vozik->Canvas->Pen->Color=clBlack;
	Image_vozik->Canvas->Pen->Width=1;
	Image_vozik->Canvas->MoveTo(stred.x-D/2*meritko,stred.y);
	Image_vozik->Canvas->LineTo(stred.x-D/2*meritko-20,stred.y);
	Image_vozik->Canvas->MoveTo(stred.x+D/2*meritko,stred.y);
	Image_vozik->Canvas->LineTo(stred.x+D/2*meritko+20,stred.y);
	//sipka -levá
	Image_vozik->Canvas->Brush->Color=clGray;
	Image_vozik->Canvas->Pen->Color=clBlack;
	Image_vozik->Canvas->Pen->Width=1;
	POINT bodyL[3]={{stred.x-D/2*meritko-13,stred.y-3},{stred.x-D/2*meritko-7,stred.y},{stred.x-D/2*meritko-13,stred.y+3}};
	Image_vozik->Canvas->Polygon((TPoint*)bodyL,2);
	//sipka - pravá
	POINT bodyP[3]={{stred.x+D/2*meritko+7,stred.y-3},{stred.x+D/2*meritko+13,stred.y},{stred.x+D/2*meritko+7,stred.y+3}};
	Image_vozik->Canvas->Polygon((TPoint*)bodyP,2);
	//vozík
	Image_vozik->Canvas->Pen->Width=2;
	Image_vozik->Canvas->Brush->Color=clWhite;
	Image_vozik->Canvas->Rectangle(stred.x-D/2*meritko,stred.y-S/2*meritko,stred.x+D/2*meritko,stred.y+S/2*meritko);
	//popisek
	Image_vozik->Canvas->Font->Size=7;
	Image_vozik->Canvas->TextOutW(stred.x-Image_vozik->Canvas->TextWidth(D)/2,stred.y+S/2*meritko-Image_vozik->Canvas->TextHeight(D)-2,D);
	Image_vozik->Canvas->TextOutW(stred.x-D/2*meritko+2,stred.y-Image_vozik->Canvas->TextHeight(S)/2,S);
}
//---------------------------------------------------------------------------
void __fastcall TForm_paremetry::Edit_CTKeyDown(TObject *Sender, WORD &Key, TShiftState Shift)

{
 if(Key==13)//ENTER
 {
		 Form_paremetry->ModalResult=idOK;//vrátí stejnou hodnotu jako tlaèítko
		 Form_paremetry->VisibleChanging();//skryje form, stejné jako visible=false
 }
}
//---------------------------------------------------------------------------
double TForm_paremetry::get_sum()
{
	 double sum=0;
	 for(int i=1;i<=ValueListEditor->RowCount;i++)
	 {
		 try
		 {
			 sum+=ValueListEditor->Cells[1][i].ToDouble();
		 }
		 catch(...){}
	 }
	 return sum;
}
//---------------------------------------------------------------------------
void TForm_paremetry::get_capacity(unsigned int input)
{
		try
		{
			switch (input)
			{
				case 1://kontinual, line tracking
				{
					if(Form1->PP.delka_voziku!=0)
					{
						if(ValueListEditor->Cells[1][1].ToDouble()>=Form1->PP.delka_voziku)
						{
							Label_kapacita_hodnota->Font->Color=clBlack;
							try{Edit_vzdalenost_voziku->Text.ToDouble();}catch(...){Edit_vzdalenost_voziku->Text=0;}
							if(RadioButton_na_delku->Checked)
								Label_kapacita_hodnota->Caption=UnicodeString((ValueListEditor->Cells[1][1].ToDouble()+Edit_vzdalenost_voziku->Text.ToDouble())/(Form1->PP.delka_voziku+Edit_vzdalenost_voziku->Text.ToDouble()));//poèet mezer=poèet vozízku-1, tj. poèítají se jen mezery mezi vozíky
							else
								Label_kapacita_hodnota->Caption=UnicodeString((ValueListEditor->Cells[1][1].ToDouble()+Edit_vzdalenost_voziku->Text.ToDouble())/(Form1->PP.sirka_voziku+Edit_vzdalenost_voziku->Text.ToDouble()));
						}
						else
						{
							Label_kapacita_hodnota->Font->Color=clRed;
							Label_kapacita_hodnota->Caption="Nepl. délka!";
						}
					}
					else {Label_kapacita_hodnota->Font->Color=clBlack;Label_kapacita_hodnota->Caption="Parametry vozík!";}
				}break;

				case 2://postprocesní
				{
					if(Form1->PP.TT!=0)
					{
						if(ValueListEditor->Cells[1][1].ToDouble()>=Form1->PP.TT)Label_kapacita_hodnota->Font->Color=clBlack;
						else	Label_kapacita_hodnota->Font->Color=clRed;
						Label_kapacita_hodnota->Caption=UnicodeString(ValueListEditor->Cells[1][1].ToDouble()/Form1->PP.TT);
						if(Label_kapacita_hodnota->Caption=="0")Label_delka_prepravniku_hodnota->Caption="0";
						else
						{
							if(RadioButton_na_delku->Checked)
								Label_delka_prepravniku_hodnota->Caption=(Label_kapacita_hodnota->Caption.ToDouble()*Form1->PP.delka_voziku)+(Label_kapacita_hodnota->Caption.ToDouble()-1)*Edit_vzdalenost_voziku->Text.ToDouble();
							else
								Label_delka_prepravniku_hodnota->Caption=(Label_kapacita_hodnota->Caption.ToDouble()*Form1->PP.sirka_voziku)+(Label_kapacita_hodnota->Caption.ToDouble()-1)*Edit_vzdalenost_voziku->Text.ToDouble();
            }
					}
					else {Label_kapacita_hodnota->Font->Color=clRed;Label_kapacita_hodnota->Caption="Zadejte TT!";}
				}break;
			}


		}catch(...){}
}
//---------------------------------------------------------------------------
void __fastcall TForm_paremetry::ValueListEditorStringsChange(TObject *Sender)
{
	Label_vypis->Visible=false;
	switch(ComboBox_druh_objektu->ItemIndex)
	{
		case 0://stop and go
		{
			Label_CT_hodnota->Caption=get_sum();Label_CT_hodnota->Caption;Label_kapacita_hodnota->Font->Color=clBlack;
			Label_TT_hodnota->Caption=get_sum();
			if(Label_TT_hodnota->Caption.ToDouble()!=Form1->PP.TT)Label_vypis->Visible=true;
		}
		break;
		case 1://kontinual
		{
			try
			{
					//ShowMessage(ComboBox_dopravnik->Items->operator[](ComboBox_dopravnik->ItemIndex));
					//ShowMessage("|"+Form1->ms.EP(ComboBox_dopravnik->Items->operator[](ComboBox_dopravnik->ItemIndex),"- "," [")+("|"));
					Label_CT_hodnota->Caption=ValueListEditor->Cells[1][1].ToDouble()/Form1->ms.EP(ComboBox_dopravnik->Items->operator[](ComboBox_dopravnik->ItemIndex),"- "," [").ToDouble();
					get_capacity(1);
					Label_TT_hodnota->Caption=Label_CT_hodnota->Caption.ToDouble()/Label_kapacita_hodnota->Caption.ToDouble();
					if(Label_TT_hodnota->Caption.ToDouble()!=Form1->PP.TT)Label_vypis->Visible=true;
			}catch(...){;};
		}
		break;
		case 2://postprocesní
		{
			get_capacity(2);
			Label_CT_hodnota->Caption=get_sum();
			Label_TT_hodnota->Caption=Form1->PP.TT;
		}
		break;
	}
}
//---------------------------------------------------------------------------
void __fastcall TForm_paremetry::ComboBox_druh_objektuChange(TObject *Sender)
{
	 setForm4Rezim(ComboBox_druh_objektu->ItemIndex);
	 ValueListEditor->Height=19*ValueListEditor->RowCount;
}
//---------------------------------------------------------------------------
void TForm_paremetry::setForm4Rezim(unsigned short rezim,bool default_text)
{
	switch(rezim)
 {
		 case 0://STOP & GO
		 {
			ComboBox_dopravnik->Visible=false;
			GroupBox_vzdalenost->Left=0;
			GroupBox_vzdalenost->Visible=false;
			GroupBox_orientace_voziku->Width=262;
			Image_vozik->Width=185;if(RadioButton_na_delku->Checked)vykresli_vozik();else vykresli_vozik(false);
			if(default_text)ValueListEditor->Strings->SetText(SG.c_str());
			Label_CT->Top=272+offset;Label_CT_hodnota->Top=272+offset;
			Label_TT->Top=291+offset;Label_TT_hodnota->Top=291+offset;
			Label_kapacita->Top=310+offset;Label_kapacita_hodnota->Top=310+offset;
			Label_kapacita_hodnota->Caption=1;
			Label_delka_prepravniku->Visible=false;Label_delka_prepravniku_hodnota->Visible=false;
			Button_min_sec->Top=364+offset;
			Form_paremetry->Height=404+offset;Button_OK->Top=350+offset;Label_vypis->Top=331+offset;
		 }break;
		 case 1://KONTINUÁLNÍ
		 {
			ComboBox_dopravnik->Visible=true;
			GroupBox_vzdalenost->Visible=true;
			GroupBox_vzdalenost->Left=195;
			GroupBox_orientace_voziku->Width=187;
			Image_vozik->Width=107;if(RadioButton_na_delku->Checked)vykresli_vozik();else vykresli_vozik(false);
			ValueListEditor->Strings->SetText(K.c_str());
			Label_CT->Top=272-19*5;Label_CT_hodnota->Top=272-19*5;
			Label_TT->Top=291-19*5;Label_TT_hodnota->Top=291-19*5;Label_TT_hodnota->Caption=0;
			Label_kapacita->Top=310-19*5;Label_kapacita_hodnota->Top=310-19*5;
			Label_delka_prepravniku->Visible=false;Label_delka_prepravniku_hodnota->Visible=false;
			Button_min_sec->Top=364-19*5;
			Form_paremetry->Height=404-19*5;Button_OK->Top=350-19*5;Label_vypis->Top=331-19*5;
		 }break;
		 case 2://POSTPROCESNÍ
		 {
			GroupBox_vzdalenost->Visible=true;
			GroupBox_vzdalenost->Left=195;
			ComboBox_dopravnik->Visible=false;
			GroupBox_orientace_voziku->Width=187;
			Image_vozik->Width=107;if(RadioButton_na_delku->Checked)vykresli_vozik();else vykresli_vozik(false);
			ValueListEditor->Strings->SetText(P.c_str());
			Label_delka_prepravniku->Visible=true;Label_delka_prepravniku_hodnota->Visible=true;
			Label_delka_prepravniku->Top=272-19*5;Label_delka_prepravniku_hodnota->Top=272-19*5;
			Label_CT->Top=272-19*4;Label_CT_hodnota->Top=272-19*4;
			Label_TT->Top=291-19*4;Label_TT_hodnota->Top=291-19*4;
			Label_kapacita->Top=310-19*4;Label_kapacita_hodnota->Top=310-19*4;
			Form_paremetry->Height=404-19*4;Button_OK->Top=350-19*4;
			Label_vypis->Top=331-19*4;Button_min_sec->Top=364-19*4;
		 }break;
 }

}
//---------------------------------------------------------------------------
void __fastcall TForm_paremetry::ComboBox_dopravnikChange(TObject *Sender)
{
	ValueListEditorStringsChange(this);
}
//---------------------------------------------------------------------------
void __fastcall TForm_paremetry::RadioButton_na_delkuClick(TObject *Sender)
{
	 vykresli_vozik(true);//na délku
	 ValueListEditorStringsChange(Sender);//zajistí pøepoèítání hodnot
}
//---------------------------------------------------------------------------

void __fastcall TForm_paremetry::RadioButton_na_sirkuClick(TObject *Sender)
{
	 vykresli_vozik(false);//na šíøku
	 ValueListEditorStringsChange(Sender);//zajistí pøepoèítání hodnot
}
//---------------------------------------------------------------------------
void __fastcall TForm_paremetry::Image_vozikClick(TObject *Sender)
{
	 if(RadioButton_na_delku->Checked){RadioButton_na_sirku->Checked=true;RadioButton_na_sirkuClick(Sender);}
	 else {RadioButton_na_delkuClick(Sender);RadioButton_na_delku->Checked=true;}
}
//---------------------------------------------------------------------------
void __fastcall TForm_paremetry::ValueListEditorClick(TObject *Sender)
{
	//požadavek na pøidání øetìzce
	if(ValueListEditor->Col==0 && ValueListEditor->Row==ValueListEditor->RowCount-1)
	{
		offset+=19;
		ValueListEditor->Height+=19;

		ValueListEditor->KeyOptions>>keyUnique;
		ValueListEditor->Strings->Add("nový parametr "+ UnicodeString(++novy_parametr_n)+"=0");
		ValueListEditor->Strings->Add("...=""");
		ValueListEditor->Strings->Delete(ValueListEditor->RowCount-4);
		ValueListEditor->KeyOptions<<keyUnique;

		setForm4Rezim(0);
	}
}
//---------------------------------------------------------------------------
void __fastcall TForm_paremetry::Edit_vzdalenost_vozikuChange(TObject *Sender)
{
	 ValueListEditorStringsChange(Sender);
}
//---------------------------------------------------------------------------
//pøepínání zobrazení min vs. sec
void __fastcall TForm_paremetry::Button_min_secClick(TObject *Sender)
{
 if(minsec==MIN)
 {
		minsec=SEC;
		Label_CT->Caption="CYCLE TIME [sec/vozík] :";
		Label_TT->Caption="TAKT TIME objektu [sec/vozík] :";
		ValueListEditor->TitleCaptions->Insert(1,"èas [sec/vozík]");

 }
 else
 {
		minsec=MIN;
		Label_CT->Caption="CYCLE TIME [min/vozík] :";
		Label_TT->Caption="TAKT TIME objektu [min/vozík] :";
		ValueListEditor->TitleCaptions->Insert(1,"èas [min/vozík]");
 }
}
//---------------------------------------------------------------------------

